{
    "input.data.format": "avro",
        "input.key.format": "avro",
        "value.converter.schema.registry.url": "http://<<Internal_IP>>:8081",
        "key.converter.schema.registry.url": "http://<<Internal_IP>>:8081",
        "name": "mongoDB-sink",
        "connector.class": "com.mongodb.kafka.connect.MongoSinkConnector",
        "tasks.max": "1",
        "key.converter": "io.confluent.connect.avro.AvroConverter",
        "value.converter": "io.confluent.connect.avro.AvroConverter",
        "transforms": "ExtractField",
        "errors.tolerance": "all",
        "errors.log.enable": "true",
        "topics": "temp",
        "errors.deadletterqueue.topic.name": "dlq_mongodb",
        "errors.deadletterqueue.topic.replication.factor": "1",
        "transforms.ExtractField.type": "org.apache.kafka.connect.transforms.ExtractField$Value",
        "transforms.ExtractField.field": "document",
        "connection.uri":"mongodb+srv://<<USER>>:<<PASSWORD>>@dynamo.5qjlg.mongodb.net/admin?retryWrites=true&w=majority",
        "database": "<<Database>>",
        "collection": "<<collectionName>>",
        "max.num.retries": "1",
        "retries.defer.timeout": "5000",
        "delete.on.null.values": "false",
        "writemodel.strategy": "com.mongodb.kafka.connect.sink.writemodel.strategy.ReplaceOneDefaultStrategy",
        "post.processor.chain": "com.mongodb.kafka.connect.sink.processor.DocumentIdAdder",
        "key.projection.type": "none",
        "document.id.strategy": "com.mongodb.kafka.connect.sink.processor.id.strategy.BsonOidStrategy",
        "document.id.strategy.overwrite.existing": "true",
        "mongo.errors.log.enable": "true"
    }